# ============================================================================
# Modern tmux Configuration (tmux 3.5a)
# ============================================================================

# ============================================================================
# General Settings
# ============================================================================

# True color support
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Undercurl support (for better terminal rendering)
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Enable mouse support
set -g mouse on

# Increase history limit
{{- if or (eq .chezmoi.hostname "Aruns-MacBook-Pro") (eq .chezmoi.fqdnHostname "Aruns-MacBook-Pro.local") }}
set -g history-limit 50000  # Work machine
{{- else }}
set -g history-limit 10000  # Personal machine
{{- end }}

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Faster command sequences
set -s escape-time 10

# Increase repeat timeout
set -sg repeat-time 400

# Enable focus events
set -s focus-events on

# Modern tmux 3.2+ features
set -s extended-keys on              # Better key binding support
set -s set-clipboard on              # External clipboard access
set -g allow-passthrough on          # Modern terminal features (OSC sequences)

# Set terminal title
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# Activity monitoring
set -g monitor-activity on
set -g visual-activity off

# Automatic window rename
setw -g automatic-rename on

# ============================================================================
# Key Bindings
# ============================================================================

# Remap prefix from 'C-b' to 'C-a' (screen-like)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Force Vi mode
set -g status-keys vi
set -g mode-keys vi

# Reload configuration
bind r source-file ~/.tmux/.tmux.conf \; display "Config reloaded!"

# Edit configuration
bind e new-window -n "~/.tmux/.tmux.conf" "sh -c '\${EDITOR:-vim} ~/.tmux/.tmux.conf && tmux source ~/.tmux/.tmux.conf && tmux display \"Config sourced\"'"

# ============================================================================
# Pane Navigation & Management (Vim-style)
# ============================================================================

# Split panes with | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Also keep traditional splits with current path
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# New window with current path
bind c new-window -c "#{pane_current_path}"

# Vim-style pane navigation
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Swap panes
bind > swap-pane -D
bind < swap-pane -U

# ============================================================================
# Window Navigation
# ============================================================================

bind Tab last-window
bind -r n next-window
bind -r p previous-window

# Kill pane/window (modern workflow - no confirmation)
bind x kill-pane
bind X kill-window

# Quick session tree
bind s choose-tree -Zs

# ============================================================================
# Copy Mode (Vi-style)
# ============================================================================

bind Enter copy-mode
bind b list-buffers
bind p paste-buffer
bind P choose-buffer

# Vi-style selection
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Note: Clipboard integration handled by tmux-yank plugin

# ============================================================================
# Modern Features (tmux 3.2+)
# ============================================================================

# Sesh session manager (C-a K) - larger for better visibility
bind K display-popup -E -w 85% -h 85% -d "#{pane_current_path}" \
  "sesh connect \$(sesh list -i | fzf --height 40% --reverse --border-label ' sesh ' --border --prompt '⚡  ')"

# Quick session switcher with fzf (C-j) - compact
bind C-j display-popup -E -w 60% -h 60% \
  "tmux list-sessions -F '#S' | fzf --height 40% --reverse --border-label ' sessions ' --border --prompt '🔀  ' | xargs tmux switch-client -t"

# Window finder with fzf (C-w) - compact
bind C-w display-popup -E -w 60% -h 60% \
  "tmux list-windows -a -F '#S:#I:#W' | fzf --height 40% --reverse --border-label ' windows ' --border --prompt '🪟  ' | cut -d: -f1,2 | xargs tmux switch-client -t"

# Directory jumper with zoxide (C-f)
bind C-f display-popup -E -w 70% -h 70% -d "#{pane_current_path}" \
  "zoxide query -l | fzf --height 40% --reverse --border-label ' zoxide ' --border --prompt '📁  ' | xargs -I {} tmux new-window -c {}"

# Popup for quick notes
bind N run-shell "mkdir -p ~/notes" \; display-popup -E -w 80% -h 80% "\${EDITOR:-vim} ~/notes/tmux-scratch.md"

# Popup for lazygit if available (prefix + g) - maximize workspace
bind g if-shell "command -v lazygit" \
  "display-popup -E -w 95% -h 95% -d '#{pane_current_path}' lazygit" \
  "display-popup -E -w 80% -h 80% -d '#{pane_current_path}'"

# Git status popup (prefix + G) - compact
bind G display-popup -E -w 70% -h 70% -d "#{pane_current_path}" \
  "git status; echo ''; echo 'Press enter to close'; read"

# ============================================================================
# Theme: Catppuccin Mocha (matches Vim theme)
# ============================================================================

# Status bar position and update interval
set -g status-position bottom
set -g status-interval 5

# Note: Theme colors and styling are handled by catppuccin/tmux plugin
# See plugin settings section below for configuration

# ============================================================================
# Plugins (TPM)
# ============================================================================

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'

# Theme - Catppuccin Mocha (matches Vim)
set -g @plugin 'catppuccin/tmux'

# Session persistence (survive reboots)
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Vim-like navigation between tmux and vim (requires vim plugin)
set -g @plugin 'christoomey/vim-tmux-navigator'

# Prefix highlight (shows when prefix is active)
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Better clipboard handling (cross-platform)
set -g @plugin 'tmux-plugins/tmux-yank'

# ============================================================================
# Plugin Settings
# ============================================================================

# Catppuccin theme settings
set -g @catppuccin_flavour 'mocha'  # Matches Vim catppuccin_mocha theme

# Window configuration
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

# Status configuration
set -g @catppuccin_status_modules_right "session host date_time"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

# Date/time format
set -g @catppuccin_date_time_text "%H:%M %d %b"

# Continuum settings
set -g @continuum-restore 'on'
{{- if or (eq .chezmoi.hostname "Aruns-MacBook-Pro") (eq .chezmoi.fqdnHostname "Aruns-MacBook-Pro.local") }}
# Work machine
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
{{- else }}
# Personal machine
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
{{- end }}

# Resurrect settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Prefix highlight settings
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=#ffff00,bg=#000000,bold"
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'

# Tmux-yank settings (handles clipboard automatically per OS)
set -g @yank_selection 'primary'  # Use primary selection (middle-click paste)
set -g @yank_selection_mouse 'clipboard'  # Mouse selection goes to clipboard

# ============================================================================
# Initialize TPM (keep this at the very bottom)
# ============================================================================

# TPM installation is handled by provisioning script: run_once_install-tools.sh
# Initialize TPM (only if installed)
if-shell "test -d ~/.tmux/plugins/tpm" \
  "run '~/.tmux/plugins/tpm/tpm'" \
  "display-message 'TPM not found. Run: chezmoi apply'"